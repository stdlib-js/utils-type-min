{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string-format' );\nvar INT8 = require( '@stdlib/constants-int8-min' );\nvar INT16 = require( '@stdlib/constants-int16-min' );\nvar INT32 = require( '@stdlib/constants-int32-min' );\nvar FLOAT16 = require( '@stdlib/constants-float16-ninf' );\nvar FLOAT32 = require( '@stdlib/constants-float32-ninf' );\nvar FLOAT64 = require( '@stdlib/constants-float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} minimum value\n*\n* @example\n* var m = typemin( 'int8' );\n* // returns -128\n*\n* @example\n* var m = typemin( 'uint8' );\n* // returns 0\n*\n* @example\n* var m = typemin( 'int16' );\n* // returns -32768\n*/\nfunction typemin( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tcase 'uint32':\n\t\t// Fall-through..\n\tcase 'uint16': // eslint-disable-line no-fallthrough\n\t\t// Fall-through..\n\tcase 'uint8': // eslint-disable-line no-fallthrough\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn 0;\n\tdefault:\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a recognized type. Value: `%s`.', dtype ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = typemin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum value of a specified numeric type.\n*\n* @module @stdlib/utils-type-min\n*\n* @example\n* var typemin = require( '@stdlib/utils-type-min' );\n*\n* var m = typemin( 'int8' );\n* // returns -128\n*\n* m = typemin( 'uint8' );\n* // returns 0\n*\n* m = typemin( 'int16' );\n* // returns -32768\n*/\n\n// MODULES //\n\nvar typemin = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = typemin;\n"],"names":["format","require$$0","INT8","require$$1","INT16","require$$2","INT32","require$$3","FLOAT16","require$$4","FLOAT32","require$$5","FLOAT64","require$$6","lib","dtype","TypeError"],"mappings":";;mmBAwBA,IAAIA,EAASC,EACTC,EAAOC,EACPC,EAAQC,EACRC,EAAQC,EACRC,EAAUC,EACVC,EAAUC,EACVC,EAAUC,EAsDd,ICvCAC,EDSA,SAAkBC,GACjB,OAASA,GACT,IAAK,UACJ,OAAOH,EACR,IAAK,QACJ,OAAON,EACR,IAAK,UACJ,OAAOI,EACR,IAAK,OACJ,OAAOR,EACR,IAAK,QACJ,OAAOE,EACR,IAAK,UACJ,OAAOI,EACR,IAAK,SAEL,IAAK,SAEL,IAAK,QAEL,IAAK,SACJ,OAAO,EACR,QACC,MAAM,IAAIQ,UAAWhB,EAAQ,iEAAkEe"}